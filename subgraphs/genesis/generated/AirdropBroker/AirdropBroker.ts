// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ExerciseOption extends ethereum.Event {
  get params(): ExerciseOption__Params {
    return new ExerciseOption__Params(this);
  }
}

export class ExerciseOption__Params {
  _event: ExerciseOption;

  constructor(event: ExerciseOption) {
    this._event = event;
  }

  get epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get paymentToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get aoTapTokenID(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class NewEpoch extends ethereum.Event {
  get params(): NewEpoch__Params {
    return new NewEpoch__Params(this);
  }
}

export class NewEpoch__Params {
  _event: NewEpoch;

  constructor(event: NewEpoch) {
    this._event = event;
  }

  get epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get epochTAPValuation(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Participate extends ethereum.Event {
  get params(): Participate__Params {
    return new Participate__Params(this);
  }
}

export class Participate__Params {
  _event: Participate;

  constructor(event: Participate) {
    this._event = event;
  }

  get epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get aoTAPTokenID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Phase2MerkleRootsUpdated extends ethereum.Event {
  get params(): Phase2MerkleRootsUpdated__Params {
    return new Phase2MerkleRootsUpdated__Params(this);
  }
}

export class Phase2MerkleRootsUpdated__Params {
  _event: Phase2MerkleRootsUpdated;

  constructor(event: Phase2MerkleRootsUpdated) {
    this._event = event;
  }
}

export class SetPaymentToken extends ethereum.Event {
  get params(): SetPaymentToken__Params {
    return new SetPaymentToken__Params(this);
  }
}

export class SetPaymentToken__Params {
  _event: SetPaymentToken;

  constructor(event: SetPaymentToken) {
    this._event = event;
  }

  get paymentToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oracle(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oracleData(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class SetTapOracle extends ethereum.Event {
  get params(): SetTapOracle__Params {
    return new SetTapOracle__Params(this);
  }
}

export class SetTapOracle__Params {
  _event: SetTapOracle;

  constructor(event: SetTapOracle) {
    this._event = event;
  }

  get oracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oracleData(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AirdropBroker__getOTCDealDetailsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getEligibleTapAmount(): BigInt {
    return this.value0;
  }

  getPaymentTokenAmount(): BigInt {
    return this.value1;
  }

  getTapAmount(): BigInt {
    return this.value2;
  }
}

export class AirdropBroker__paymentTokensResult {
  value0: Address;
  value1: Bytes;

  constructor(value0: Address, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getOracle(): Address {
    return this.value0;
  }

  getOracleData(): Bytes {
    return this.value1;
  }
}

export class AirdropBroker extends ethereum.SmartContract {
  static bind(address: Address): AirdropBroker {
    return new AirdropBroker("AirdropBroker", address);
  }

  EPOCH_DURATION(): BigInt {
    let result = super.call("EPOCH_DURATION", "EPOCH_DURATION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_EPOCH_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "EPOCH_DURATION",
      "EPOCH_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  LAST_EPOCH(): BigInt {
    let result = super.call("LAST_EPOCH", "LAST_EPOCH():(uint256)", []);

    return result[0].toBigInt();
  }

  try_LAST_EPOCH(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("LAST_EPOCH", "LAST_EPOCH():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PCNFT(): Address {
    let result = super.call("PCNFT", "PCNFT():(address)", []);

    return result[0].toAddress();
  }

  try_PCNFT(): ethereum.CallResult<Address> {
    let result = super.tryCall("PCNFT", "PCNFT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  PHASE_1_DISCOUNT(): BigInt {
    let result = super.call(
      "PHASE_1_DISCOUNT",
      "PHASE_1_DISCOUNT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PHASE_1_DISCOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PHASE_1_DISCOUNT",
      "PHASE_1_DISCOUNT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PHASE_2_AMOUNT_PER_USER(param0: BigInt): i32 {
    let result = super.call(
      "PHASE_2_AMOUNT_PER_USER",
      "PHASE_2_AMOUNT_PER_USER(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toI32();
  }

  try_PHASE_2_AMOUNT_PER_USER(param0: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PHASE_2_AMOUNT_PER_USER",
      "PHASE_2_AMOUNT_PER_USER(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PHASE_2_DISCOUNT_PER_USER(param0: BigInt): i32 {
    let result = super.call(
      "PHASE_2_DISCOUNT_PER_USER",
      "PHASE_2_DISCOUNT_PER_USER(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toI32();
  }

  try_PHASE_2_DISCOUNT_PER_USER(param0: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "PHASE_2_DISCOUNT_PER_USER",
      "PHASE_2_DISCOUNT_PER_USER(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  PHASE_3_AMOUNT_PER_USER(): BigInt {
    let result = super.call(
      "PHASE_3_AMOUNT_PER_USER",
      "PHASE_3_AMOUNT_PER_USER():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PHASE_3_AMOUNT_PER_USER(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PHASE_3_AMOUNT_PER_USER",
      "PHASE_3_AMOUNT_PER_USER():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PHASE_3_DISCOUNT(): BigInt {
    let result = super.call(
      "PHASE_3_DISCOUNT",
      "PHASE_3_DISCOUNT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PHASE_3_DISCOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PHASE_3_DISCOUNT",
      "PHASE_3_DISCOUNT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PHASE_4_DISCOUNT(): BigInt {
    let result = super.call(
      "PHASE_4_DISCOUNT",
      "PHASE_4_DISCOUNT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PHASE_4_DISCOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PHASE_4_DISCOUNT",
      "PHASE_4_DISCOUNT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  aoTAP(): Address {
    let result = super.call("aoTAP", "aoTAP():(address)", []);

    return result[0].toAddress();
  }

  try_aoTAP(): ethereum.CallResult<Address> {
    let result = super.tryCall("aoTAP", "aoTAP():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  aoTAPCalls(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "aoTAPCalls",
      "aoTAPCalls(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_aoTAPCalls(param0: BigInt, param1: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "aoTAPCalls",
      "aoTAPCalls(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  epoch(): BigInt {
    let result = super.call("epoch", "epoch():(uint64)", []);

    return result[0].toBigInt();
  }

  try_epoch(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("epoch", "epoch():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  epochTAPValuation(): BigInt {
    let result = super.call(
      "epochTAPValuation",
      "epochTAPValuation():(uint128)",
      []
    );

    return result[0].toBigInt();
  }

  try_epochTAPValuation(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "epochTAPValuation",
      "epochTAPValuation():(uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOTCDealDetails(
    _aoTAPTokenID: BigInt,
    _paymentToken: Address,
    _tapAmount: BigInt
  ): AirdropBroker__getOTCDealDetailsResult {
    let result = super.call(
      "getOTCDealDetails",
      "getOTCDealDetails(uint256,address,uint256):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_aoTAPTokenID),
        ethereum.Value.fromAddress(_paymentToken),
        ethereum.Value.fromUnsignedBigInt(_tapAmount)
      ]
    );

    return new AirdropBroker__getOTCDealDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getOTCDealDetails(
    _aoTAPTokenID: BigInt,
    _paymentToken: Address,
    _tapAmount: BigInt
  ): ethereum.CallResult<AirdropBroker__getOTCDealDetailsResult> {
    let result = super.tryCall(
      "getOTCDealDetails",
      "getOTCDealDetails(uint256,address,uint256):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_aoTAPTokenID),
        ethereum.Value.fromAddress(_paymentToken),
        ethereum.Value.fromUnsignedBigInt(_tapAmount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AirdropBroker__getOTCDealDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  lastEpochUpdate(): BigInt {
    let result = super.call(
      "lastEpochUpdate",
      "lastEpochUpdate():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_lastEpochUpdate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastEpochUpdate",
      "lastEpochUpdate():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  participate(_data: Bytes): BigInt {
    let result = super.call("participate", "participate(bytes):(uint256)", [
      ethereum.Value.fromBytes(_data)
    ]);

    return result[0].toBigInt();
  }

  try_participate(_data: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("participate", "participate(bytes):(uint256)", [
      ethereum.Value.fromBytes(_data)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paymentTokenBeneficiary(): Address {
    let result = super.call(
      "paymentTokenBeneficiary",
      "paymentTokenBeneficiary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_paymentTokenBeneficiary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "paymentTokenBeneficiary",
      "paymentTokenBeneficiary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paymentTokens(param0: Address): AirdropBroker__paymentTokensResult {
    let result = super.call(
      "paymentTokens",
      "paymentTokens(address):(address,bytes)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new AirdropBroker__paymentTokensResult(
      result[0].toAddress(),
      result[1].toBytes()
    );
  }

  try_paymentTokens(
    param0: Address
  ): ethereum.CallResult<AirdropBroker__paymentTokensResult> {
    let result = super.tryCall(
      "paymentTokens",
      "paymentTokens(address):(address,bytes)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AirdropBroker__paymentTokensResult(
        value[0].toAddress(),
        value[1].toBytes()
      )
    );
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  phase1Users(param0: Address): BigInt {
    let result = super.call("phase1Users", "phase1Users(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_phase1Users(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "phase1Users",
      "phase1Users(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  phase2MerkleRoots(param0: BigInt): Bytes {
    let result = super.call(
      "phase2MerkleRoots",
      "phase2MerkleRoots(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_phase2MerkleRoots(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "phase2MerkleRoots",
      "phase2MerkleRoots(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  phase4Users(param0: Address): BigInt {
    let result = super.call("phase4Users", "phase4Users(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_phase4Users(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "phase4Users",
      "phase4Users(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tapOFT(): Address {
    let result = super.call("tapOFT", "tapOFT():(address)", []);

    return result[0].toAddress();
  }

  try_tapOFT(): ethereum.CallResult<Address> {
    let result = super.tryCall("tapOFT", "tapOFT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tapOracle(): Address {
    let result = super.call("tapOracle", "tapOracle():(address)", []);

    return result[0].toAddress();
  }

  try_tapOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("tapOracle", "tapOracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tapOracleData(): Bytes {
    let result = super.call("tapOracleData", "tapOracleData():(bytes)", []);

    return result[0].toBytes();
  }

  try_tapOracleData(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("tapOracleData", "tapOracleData():(bytes)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  userParticipation(param0: Address, param1: BigInt): boolean {
    let result = super.call(
      "userParticipation",
      "userParticipation(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_userParticipation(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "userParticipation",
      "userParticipation(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _aoTAP(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tapOFT(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pcnft(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _paymentTokenBeneficiary(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AoTAPBrokerClaimCall extends ethereum.Call {
  get inputs(): AoTAPBrokerClaimCall__Inputs {
    return new AoTAPBrokerClaimCall__Inputs(this);
  }

  get outputs(): AoTAPBrokerClaimCall__Outputs {
    return new AoTAPBrokerClaimCall__Outputs(this);
  }
}

export class AoTAPBrokerClaimCall__Inputs {
  _call: AoTAPBrokerClaimCall;

  constructor(call: AoTAPBrokerClaimCall) {
    this._call = call;
  }
}

export class AoTAPBrokerClaimCall__Outputs {
  _call: AoTAPBrokerClaimCall;

  constructor(call: AoTAPBrokerClaimCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall extends ethereum.Call {
  get inputs(): ClaimOwnershipCall__Inputs {
    return new ClaimOwnershipCall__Inputs(this);
  }

  get outputs(): ClaimOwnershipCall__Outputs {
    return new ClaimOwnershipCall__Outputs(this);
  }
}

export class ClaimOwnershipCall__Inputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall__Outputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class CollectPaymentTokensCall extends ethereum.Call {
  get inputs(): CollectPaymentTokensCall__Inputs {
    return new CollectPaymentTokensCall__Inputs(this);
  }

  get outputs(): CollectPaymentTokensCall__Outputs {
    return new CollectPaymentTokensCall__Outputs(this);
  }
}

export class CollectPaymentTokensCall__Inputs {
  _call: CollectPaymentTokensCall;

  constructor(call: CollectPaymentTokensCall) {
    this._call = call;
  }

  get _paymentTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class CollectPaymentTokensCall__Outputs {
  _call: CollectPaymentTokensCall;

  constructor(call: CollectPaymentTokensCall) {
    this._call = call;
  }
}

export class DaoRecoverTAPCall extends ethereum.Call {
  get inputs(): DaoRecoverTAPCall__Inputs {
    return new DaoRecoverTAPCall__Inputs(this);
  }

  get outputs(): DaoRecoverTAPCall__Outputs {
    return new DaoRecoverTAPCall__Outputs(this);
  }
}

export class DaoRecoverTAPCall__Inputs {
  _call: DaoRecoverTAPCall;

  constructor(call: DaoRecoverTAPCall) {
    this._call = call;
  }
}

export class DaoRecoverTAPCall__Outputs {
  _call: DaoRecoverTAPCall;

  constructor(call: DaoRecoverTAPCall) {
    this._call = call;
  }
}

export class ExerciseOptionCall extends ethereum.Call {
  get inputs(): ExerciseOptionCall__Inputs {
    return new ExerciseOptionCall__Inputs(this);
  }

  get outputs(): ExerciseOptionCall__Outputs {
    return new ExerciseOptionCall__Outputs(this);
  }
}

export class ExerciseOptionCall__Inputs {
  _call: ExerciseOptionCall;

  constructor(call: ExerciseOptionCall) {
    this._call = call;
  }

  get _aoTAPTokenID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tapAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExerciseOptionCall__Outputs {
  _call: ExerciseOptionCall;

  constructor(call: ExerciseOptionCall) {
    this._call = call;
  }
}

export class NewEpochCall extends ethereum.Call {
  get inputs(): NewEpochCall__Inputs {
    return new NewEpochCall__Inputs(this);
  }

  get outputs(): NewEpochCall__Outputs {
    return new NewEpochCall__Outputs(this);
  }
}

export class NewEpochCall__Inputs {
  _call: NewEpochCall;

  constructor(call: NewEpochCall) {
    this._call = call;
  }
}

export class NewEpochCall__Outputs {
  _call: NewEpochCall;

  constructor(call: NewEpochCall) {
    this._call = call;
  }
}

export class ParticipateCall extends ethereum.Call {
  get inputs(): ParticipateCall__Inputs {
    return new ParticipateCall__Inputs(this);
  }

  get outputs(): ParticipateCall__Outputs {
    return new ParticipateCall__Outputs(this);
  }
}

export class ParticipateCall__Inputs {
  _call: ParticipateCall;

  constructor(call: ParticipateCall) {
    this._call = call;
  }

  get _data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ParticipateCall__Outputs {
  _call: ParticipateCall;

  constructor(call: ParticipateCall) {
    this._call = call;
  }

  get aoTAPTokenID(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RegisterUsersForPhaseCall extends ethereum.Call {
  get inputs(): RegisterUsersForPhaseCall__Inputs {
    return new RegisterUsersForPhaseCall__Inputs(this);
  }

  get outputs(): RegisterUsersForPhaseCall__Outputs {
    return new RegisterUsersForPhaseCall__Outputs(this);
  }
}

export class RegisterUsersForPhaseCall__Inputs {
  _call: RegisterUsersForPhaseCall;

  constructor(call: RegisterUsersForPhaseCall) {
    this._call = call;
  }

  get _phase(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _users(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class RegisterUsersForPhaseCall__Outputs {
  _call: RegisterUsersForPhaseCall;

  constructor(call: RegisterUsersForPhaseCall) {
    this._call = call;
  }
}

export class SetPaymentTokenCall extends ethereum.Call {
  get inputs(): SetPaymentTokenCall__Inputs {
    return new SetPaymentTokenCall__Inputs(this);
  }

  get outputs(): SetPaymentTokenCall__Outputs {
    return new SetPaymentTokenCall__Outputs(this);
  }
}

export class SetPaymentTokenCall__Inputs {
  _call: SetPaymentTokenCall;

  constructor(call: SetPaymentTokenCall) {
    this._call = call;
  }

  get _paymentToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _oracleData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SetPaymentTokenCall__Outputs {
  _call: SetPaymentTokenCall;

  constructor(call: SetPaymentTokenCall) {
    this._call = call;
  }
}

export class SetPaymentTokenBeneficiaryCall extends ethereum.Call {
  get inputs(): SetPaymentTokenBeneficiaryCall__Inputs {
    return new SetPaymentTokenBeneficiaryCall__Inputs(this);
  }

  get outputs(): SetPaymentTokenBeneficiaryCall__Outputs {
    return new SetPaymentTokenBeneficiaryCall__Outputs(this);
  }
}

export class SetPaymentTokenBeneficiaryCall__Inputs {
  _call: SetPaymentTokenBeneficiaryCall;

  constructor(call: SetPaymentTokenBeneficiaryCall) {
    this._call = call;
  }

  get _paymentTokenBeneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPaymentTokenBeneficiaryCall__Outputs {
  _call: SetPaymentTokenBeneficiaryCall;

  constructor(call: SetPaymentTokenBeneficiaryCall) {
    this._call = call;
  }
}

export class SetPhase2MerkleRootsCall extends ethereum.Call {
  get inputs(): SetPhase2MerkleRootsCall__Inputs {
    return new SetPhase2MerkleRootsCall__Inputs(this);
  }

  get outputs(): SetPhase2MerkleRootsCall__Outputs {
    return new SetPhase2MerkleRootsCall__Outputs(this);
  }
}

export class SetPhase2MerkleRootsCall__Inputs {
  _call: SetPhase2MerkleRootsCall;

  constructor(call: SetPhase2MerkleRootsCall) {
    this._call = call;
  }

  get _merkleRoots(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class SetPhase2MerkleRootsCall__Outputs {
  _call: SetPhase2MerkleRootsCall;

  constructor(call: SetPhase2MerkleRootsCall) {
    this._call = call;
  }
}

export class SetTapOracleCall extends ethereum.Call {
  get inputs(): SetTapOracleCall__Inputs {
    return new SetTapOracleCall__Inputs(this);
  }

  get outputs(): SetTapOracleCall__Outputs {
    return new SetTapOracleCall__Outputs(this);
  }
}

export class SetTapOracleCall__Inputs {
  _call: SetTapOracleCall;

  constructor(call: SetTapOracleCall) {
    this._call = call;
  }

  get _tapOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tapOracleData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetTapOracleCall__Outputs {
  _call: SetTapOracleCall;

  constructor(call: SetTapOracleCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get direct(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get renounce(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
