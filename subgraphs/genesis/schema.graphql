type ParticipationAOTap @entity(immutable: true) {
  id: ID!
  participantAddress: String! # address of the user who participated
  expirationTimestamp: Int! # when this option expires
  discount: Int! # in %
  tapAmount: BigInt! # eligible TAP amount
  epochClaimed: Int! # epoch ID where this option was created
}


type PoolBalance @entity(immutable: false) {
  id: ID!
  pool: Pool!
  token: Token!
  amount: BigInt! 
}

type PoolBalanceFiveMinuteData @entity(immutable: false) {
  id: ID!
  pool: Pool!
  token: Token!
  amount: BigInt!
  periodStartUnix: Int!
}

type PoolWeights @entity(immutable: false) {
  id: ID!
  pool: Pool!
  startTimestamp: Int!
  endTimestamp: Int!
  startWeights: [BigInt!]!
  endWeights: [BigInt!]!
}

type Pool @entity(immutable: true) {
  id: ID!
  balances: [PoolBalance!]! @derivedFrom(field: "pool")
  tokens: [Token!]!
  weights: PoolWeights
}

type Token @entity(immutable: true) {
  id: ID!
  address: String!
  name: String!
  symbol: String!
  decimals: Int! # uint32
}

type UserTokenBalance @entity(immutable: false) {
  id: ID!
  user: String!
  token: Token!
  amount: BigInt! 
}