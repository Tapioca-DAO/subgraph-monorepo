// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CreateOFT extends ethereum.Event {
  get params(): CreateOFT__Params {
    return new CreateOFT__Params(this);
  }
}

export class CreateOFT__Params {
  _event: CreateOFT;

  constructor(event: CreateOFT) {
    this._event = event;
  }

  get _tapiocaOFT(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _erc20(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetFees extends ethereum.Event {
  get params(): SetFees__Params {
    return new SetFees__Params(this);
  }
}

export class SetFees__Params {
  _event: SetFees;

  constructor(event: SetFees) {
    this._event = event;
  }

  get _newFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TapiocaWrapper extends ethereum.SmartContract {
  static bind(address: Address): TapiocaWrapper {
    return new TapiocaWrapper("TapiocaWrapper", address);
  }

  harvestableTapiocaOFTsLength(): BigInt {
    let result = super.call(
      "harvestableTapiocaOFTsLength",
      "harvestableTapiocaOFTsLength():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_harvestableTapiocaOFTsLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "harvestableTapiocaOFTsLength",
      "harvestableTapiocaOFTsLength():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastTOFT(): Address {
    let result = super.call("lastTOFT", "lastTOFT():(address)", []);

    return result[0].toAddress();
  }

  try_lastTOFT(): ethereum.CallResult<Address> {
    let result = super.tryCall("lastTOFT", "lastTOFT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tapiocaOFTLength(): BigInt {
    let result = super.call(
      "tapiocaOFTLength",
      "tapiocaOFTLength():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_tapiocaOFTLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tapiocaOFTLength",
      "tapiocaOFTLength():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tapiocaOFTs(param0: BigInt): Address {
    let result = super.call("tapiocaOFTs", "tapiocaOFTs(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toAddress();
  }

  try_tapiocaOFTs(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tapiocaOFTs",
      "tapiocaOFTs(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tapiocaOFTsByErc20(param0: Address): Address {
    let result = super.call(
      "tapiocaOFTsByErc20",
      "tapiocaOFTsByErc20(address):(address)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toAddress();
  }

  try_tapiocaOFTsByErc20(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tapiocaOFTsByErc20",
      "tapiocaOFTsByErc20(address):(address)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateTOFTCall extends ethereum.Call {
  get inputs(): CreateTOFTCall__Inputs {
    return new CreateTOFTCall__Inputs(this);
  }

  get outputs(): CreateTOFTCall__Outputs {
    return new CreateTOFTCall__Outputs(this);
  }
}

export class CreateTOFTCall__Inputs {
  _call: CreateTOFTCall;

  constructor(call: CreateTOFTCall) {
    this._call = call;
  }

  get _erc20(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bytecode(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _salt(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _linked(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class CreateTOFTCall__Outputs {
  _call: CreateTOFTCall;

  constructor(call: CreateTOFTCall) {
    this._call = call;
  }
}

export class ExecuteCallsCall extends ethereum.Call {
  get inputs(): ExecuteCallsCall__Inputs {
    return new ExecuteCallsCall__Inputs(this);
  }

  get outputs(): ExecuteCallsCall__Outputs {
    return new ExecuteCallsCall__Outputs(this);
  }
}

export class ExecuteCallsCall__Inputs {
  _call: ExecuteCallsCall;

  constructor(call: ExecuteCallsCall) {
    this._call = call;
  }

  get _call(): Array<ExecuteCallsCall_callStruct> {
    return this._call.inputValues[0].value.toTupleArray<ExecuteCallsCall_callStruct>();
  }
}

export class ExecuteCallsCall__Outputs {
  _call: ExecuteCallsCall;

  constructor(call: ExecuteCallsCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[1].value.toBytesArray();
  }
}

export class ExecuteCallsCall_callStruct extends ethereum.Tuple {
  get toft(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get bytecode(): Bytes {
    return this[2].toBytes();
  }

  get revertOnFailure(): boolean {
    return this[3].toBoolean();
  }
}

export class ExecuteTOFTCall extends ethereum.Call {
  get inputs(): ExecuteTOFTCall__Inputs {
    return new ExecuteTOFTCall__Inputs(this);
  }

  get outputs(): ExecuteTOFTCall__Outputs {
    return new ExecuteTOFTCall__Outputs(this);
  }
}

export class ExecuteTOFTCall__Inputs {
  _call: ExecuteTOFTCall;

  constructor(call: ExecuteTOFTCall) {
    this._call = call;
  }

  get _toft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bytecode(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _revertOnFailure(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class ExecuteTOFTCall__Outputs {
  _call: ExecuteTOFTCall;

  constructor(call: ExecuteTOFTCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get result(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
