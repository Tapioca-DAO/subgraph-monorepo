// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ConservatorUpdated extends ethereum.Event {
  get params(): ConservatorUpdated__Params {
    return new ConservatorUpdated__Params(this);
  }
}

export class ConservatorUpdated__Params {
  _event: ConservatorUpdated;

  constructor(event: ConservatorUpdated) {
    this._event = event;
  }

  get old(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _new(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EIP712DomainChanged extends ethereum.Event {
  get params(): EIP712DomainChanged__Params {
    return new EIP712DomainChanged__Params(this);
  }
}

export class EIP712DomainChanged__Params {
  _event: EIP712DomainChanged;

  constructor(event: EIP712DomainChanged) {
    this._event = event;
  }
}

export class EnforcedOptionSet extends ethereum.Event {
  get params(): EnforcedOptionSet__Params {
    return new EnforcedOptionSet__Params(this);
  }
}

export class EnforcedOptionSet__Params {
  _event: EnforcedOptionSet;

  constructor(event: EnforcedOptionSet) {
    this._event = event;
  }

  get _enforcedOptions(): Array<EnforcedOptionSet_enforcedOptionsStruct> {
    return this._event.parameters[0].value.toTupleArray<EnforcedOptionSet_enforcedOptionsStruct>();
  }
}

export class EnforcedOptionSet_enforcedOptionsStruct extends ethereum.Tuple {
  get eid(): BigInt {
    return this[0].toBigInt();
  }

  get msgType(): i32 {
    return this[1].toI32();
  }

  get options(): Bytes {
    return this[2].toBytes();
  }
}

export class MsgInspectorSet extends ethereum.Event {
  get params(): MsgInspectorSet__Params {
    return new MsgInspectorSet__Params(this);
  }
}

export class MsgInspectorSet__Params {
  _event: MsgInspectorSet;

  constructor(event: MsgInspectorSet) {
    this._event = event;
  }

  get inspector(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OFTReceived extends ethereum.Event {
  get params(): OFTReceived__Params {
    return new OFTReceived__Params(this);
  }
}

export class OFTReceived__Params {
  _event: OFTReceived;

  constructor(event: OFTReceived) {
    this._event = event;
  }

  get guid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get srcEid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get toAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountReceivedLD(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OFTSent extends ethereum.Event {
  get params(): OFTSent__Params {
    return new OFTSent__Params(this);
  }
}

export class OFTSent__Params {
  _event: OFTSent;

  constructor(event: OFTSent) {
    this._event = event;
  }

  get guid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get dstEid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fromAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountSentLD(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PearlmitUpdated extends ethereum.Event {
  get params(): PearlmitUpdated__Params {
    return new PearlmitUpdated__Params(this);
  }
}

export class PearlmitUpdated__Params {
  _event: PearlmitUpdated;

  constructor(event: PearlmitUpdated) {
    this._event = event;
  }

  get oldPearlmit(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPearlmit(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PeerSet extends ethereum.Event {
  get params(): PeerSet__Params {
    return new PeerSet__Params(this);
  }
}

export class PeerSet__Params {
  _event: PeerSet;

  constructor(event: PeerSet) {
    this._event = event;
  }

  get eid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get peer(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class PreCrimeSet extends ethereum.Event {
  get params(): PreCrimeSet__Params {
    return new PreCrimeSet__Params(this);
  }
}

export class PreCrimeSet__Params {
  _event: PreCrimeSet;

  constructor(event: PreCrimeSet) {
    this._event = event;
  }

  get preCrimeAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetBurnerStatus extends ethereum.Event {
  get params(): SetBurnerStatus__Params {
    return new SetBurnerStatus__Params(this);
  }
}

export class SetBurnerStatus__Params {
  _event: SetBurnerStatus;

  constructor(event: SetBurnerStatus) {
    this._event = event;
  }

  get _for(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SetMinterStatus extends ethereum.Event {
  get params(): SetMinterStatus__Params {
    return new SetMinterStatus__Params(this);
  }
}

export class SetMinterStatus__Params {
  _event: SetMinterStatus;

  constructor(event: SetMinterStatus) {
    this._event = event;
  }

  get _for(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class USDO__allowInitializePathInputOriginStruct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class USDO__eip712DomainResult {
  value0: Bytes;
  value1: string;
  value2: string;
  value3: BigInt;
  value4: Address;
  value5: Bytes;
  value6: Array<BigInt>;

  constructor(
    value0: Bytes,
    value1: string,
    value2: string,
    value3: BigInt,
    value4: Address,
    value5: Bytes,
    value6: Array<BigInt>,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromFixedBytes(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigIntArray(this.value6));
    return map;
  }

  getFields(): Bytes {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getVersion(): string {
    return this.value2;
  }

  getChainId(): BigInt {
    return this.value3;
  }

  getVerifyingContract(): Address {
    return this.value4;
  }

  getSalt(): Bytes {
    return this.value5;
  }

  getExtensions(): Array<BigInt> {
    return this.value6;
  }
}

export class USDO__getTypedDataHashInput_permitDataStruct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get spender(): Address {
    return this[1].toAddress();
  }

  get value(): BigInt {
    return this[2].toBigInt();
  }

  get nonce(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }
}

export class USDO__isComposeMsgSenderInputParam0Struct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class USDO__oAppVersionResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getSenderVersion(): BigInt {
    return this.value0;
  }

  getReceiverVersion(): BigInt {
    return this.value1;
  }
}

export class USDO__oftVersionResult {
  value0: Bytes;
  value1: BigInt;

  constructor(value0: Bytes, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getInterfaceId(): Bytes {
    return this.value0;
  }

  getVersion(): BigInt {
    return this.value1;
  }
}

export class USDO__quoteOFTResultOftLimitStruct extends ethereum.Tuple {
  get minAmountLD(): BigInt {
    return this[0].toBigInt();
  }

  get maxAmountLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class USDO__quoteOFTResultOftFeeDetailsStruct extends ethereum.Tuple {
  get feeAmountLD(): BigInt {
    return this[0].toBigInt();
  }

  get description(): string {
    return this[1].toString();
  }
}

export class USDO__quoteOFTResultOftReceiptStruct extends ethereum.Tuple {
  get amountSentLD(): BigInt {
    return this[0].toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class USDO__quoteOFTResult {
  value0: USDO__quoteOFTResultOftLimitStruct;
  value1: Array<USDO__quoteOFTResultOftFeeDetailsStruct>;
  value2: USDO__quoteOFTResultOftReceiptStruct;

  constructor(
    value0: USDO__quoteOFTResultOftLimitStruct,
    value1: Array<USDO__quoteOFTResultOftFeeDetailsStruct>,
    value2: USDO__quoteOFTResultOftReceiptStruct,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTupleArray(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    return map;
  }

  getOftLimit(): USDO__quoteOFTResultOftLimitStruct {
    return this.value0;
  }

  getOftFeeDetails(): Array<USDO__quoteOFTResultOftFeeDetailsStruct> {
    return this.value1;
  }

  getOftReceipt(): USDO__quoteOFTResultOftReceiptStruct {
    return this.value2;
  }
}

export class USDO__quoteOFTInput_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class USDO__quoteSendResultMsgFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class USDO__quoteSendInput_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class USDO__quoteSendPacketResultMsgFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class USDO__quoteSendPacketInput_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class USDO extends ethereum.SmartContract {
  static bind(address: Address): USDO {
    return new USDO("USDO", address);
  }

  CLUSTER_SLOT(): Bytes {
    let result = super.call("CLUSTER_SLOT", "CLUSTER_SLOT():(bytes32)", []);

    return result[0].toBytes();
  }

  try_CLUSTER_SLOT(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("CLUSTER_SLOT", "CLUSTER_SLOT():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MSG_SEND(): i32 {
    let result = super.call("MSG_SEND", "MSG_SEND():(uint16)", []);

    return result[0].toI32();
  }

  try_MSG_SEND(): ethereum.CallResult<i32> {
    let result = super.tryCall("MSG_SEND", "MSG_SEND():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  SEND(): i32 {
    let result = super.call("SEND", "SEND():(uint16)", []);

    return result[0].toI32();
  }

  try_SEND(): ethereum.CallResult<i32> {
    let result = super.tryCall("SEND", "SEND():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  SEND_AND_CALL(): i32 {
    let result = super.call("SEND_AND_CALL", "SEND_AND_CALL():(uint16)", []);

    return result[0].toI32();
  }

  try_SEND_AND_CALL(): ethereum.CallResult<i32> {
    let result = super.tryCall("SEND_AND_CALL", "SEND_AND_CALL():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  allowInitializePath(
    origin: USDO__allowInitializePathInputOriginStruct,
  ): boolean {
    let result = super.call(
      "allowInitializePath",
      "allowInitializePath((uint32,bytes32,uint64)):(bool)",
      [ethereum.Value.fromTuple(origin)],
    );

    return result[0].toBoolean();
  }

  try_allowInitializePath(
    origin: USDO__allowInitializePathInputOriginStruct,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowInitializePath",
      "allowInitializePath((uint32,bytes32,uint64)):(bool)",
      [ethereum.Value.fromTuple(origin)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)],
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allowedBurner(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "allowedBurner",
      "allowedBurner(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_allowedBurner(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowedBurner",
      "allowedBurner(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  allowedMinter(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "allowedMinter",
      "allowedMinter(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_allowedMinter(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowedMinter",
      "allowedMinter(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  approvalRequired(): boolean {
    let result = super.call(
      "approvalRequired",
      "approvalRequired():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_approvalRequired(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "approvalRequired",
      "approvalRequired():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  combineOptions(_eid: BigInt, _msgType: i32, _extraOptions: Bytes): Bytes {
    let result = super.call(
      "combineOptions",
      "combineOptions(uint32,uint16,bytes):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_eid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_msgType)),
        ethereum.Value.fromBytes(_extraOptions),
      ],
    );

    return result[0].toBytes();
  }

  try_combineOptions(
    _eid: BigInt,
    _msgType: i32,
    _extraOptions: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "combineOptions",
      "combineOptions(uint32,uint16,bytes):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_eid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_msgType)),
        ethereum.Value.fromBytes(_extraOptions),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  decimalConversionRate(): BigInt {
    let result = super.call(
      "decimalConversionRate",
      "decimalConversionRate():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_decimalConversionRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "decimalConversionRate",
      "decimalConversionRate():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue),
      ],
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    subtractedValue: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  eip712Domain(): USDO__eip712DomainResult {
    let result = super.call(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      [],
    );

    return new USDO__eip712DomainResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBytes(),
      result[6].toBigIntArray(),
    );
  }

  try_eip712Domain(): ethereum.CallResult<USDO__eip712DomainResult> {
    let result = super.tryCall(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new USDO__eip712DomainResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toBytes(),
        value[6].toBigIntArray(),
      ),
    );
  }

  endpoint(): Address {
    let result = super.call("endpoint", "endpoint():(address)", []);

    return result[0].toAddress();
  }

  try_endpoint(): ethereum.CallResult<Address> {
    let result = super.tryCall("endpoint", "endpoint():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  enforcedOptions(eid: BigInt, msgType: i32): Bytes {
    let result = super.call(
      "enforcedOptions",
      "enforcedOptions(uint32,uint16):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(eid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(msgType)),
      ],
    );

    return result[0].toBytes();
  }

  try_enforcedOptions(eid: BigInt, msgType: i32): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "enforcedOptions",
      "enforcedOptions(uint32,uint16):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(eid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(msgType)),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  flashLoanHelper(): Address {
    let result = super.call(
      "flashLoanHelper",
      "flashLoanHelper():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_flashLoanHelper(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "flashLoanHelper",
      "flashLoanHelper():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCluster(): Address {
    let result = super.call("getCluster", "getCluster():(address)", []);

    return result[0].toAddress();
  }

  try_getCluster(): ethereum.CallResult<Address> {
    let result = super.tryCall("getCluster", "getCluster():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTypedDataHash(
    _permitData: USDO__getTypedDataHashInput_permitDataStruct,
  ): Bytes {
    let result = super.call(
      "getTypedDataHash",
      "getTypedDataHash((address,address,uint256,uint256,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(_permitData)],
    );

    return result[0].toBytes();
  }

  try_getTypedDataHash(
    _permitData: USDO__getTypedDataHashInput_permitDataStruct,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getTypedDataHash",
      "getTypedDataHash((address,address,uint256,uint256,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(_permitData)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue),
      ],
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isComposeMsgSender(
    param0: USDO__isComposeMsgSenderInputParam0Struct,
    param1: Bytes,
    _sender: Address,
  ): boolean {
    let result = super.call(
      "isComposeMsgSender",
      "isComposeMsgSender((uint32,bytes32,uint64),bytes,address):(bool)",
      [
        ethereum.Value.fromTuple(param0),
        ethereum.Value.fromBytes(param1),
        ethereum.Value.fromAddress(_sender),
      ],
    );

    return result[0].toBoolean();
  }

  try_isComposeMsgSender(
    param0: USDO__isComposeMsgSenderInputParam0Struct,
    param1: Bytes,
    _sender: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isComposeMsgSender",
      "isComposeMsgSender((uint32,bytes32,uint64),bytes,address):(bool)",
      [
        ethereum.Value.fromTuple(param0),
        ethereum.Value.fromBytes(param1),
        ethereum.Value.fromAddress(_sender),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPeer(_eid: BigInt, _peer: Bytes): boolean {
    let result = super.call("isPeer", "isPeer(uint32,bytes32):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_eid),
      ethereum.Value.fromFixedBytes(_peer),
    ]);

    return result[0].toBoolean();
  }

  try_isPeer(_eid: BigInt, _peer: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPeer", "isPeer(uint32,bytes32):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_eid),
      ethereum.Value.fromFixedBytes(_peer),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  msgInspector(): Address {
    let result = super.call("msgInspector", "msgInspector():(address)", []);

    return result[0].toAddress();
  }

  try_msgInspector(): ethereum.CallResult<Address> {
    let result = super.tryCall("msgInspector", "msgInspector():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nextNonce(param0: BigInt, param1: Bytes): BigInt {
    let result = super.call("nextNonce", "nextNonce(uint32,bytes32):(uint64)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromFixedBytes(param1),
    ]);

    return result[0].toBigInt();
  }

  try_nextNonce(param0: BigInt, param1: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextNonce",
      "nextNonce(uint32,bytes32):(uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromFixedBytes(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nonces(owner: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toBigInt();
  }

  try_nonces(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oApp(): Address {
    let result = super.call("oApp", "oApp():(address)", []);

    return result[0].toAddress();
  }

  try_oApp(): ethereum.CallResult<Address> {
    let result = super.tryCall("oApp", "oApp():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  oAppVersion(): USDO__oAppVersionResult {
    let result = super.call("oAppVersion", "oAppVersion():(uint64,uint64)", []);

    return new USDO__oAppVersionResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_oAppVersion(): ethereum.CallResult<USDO__oAppVersionResult> {
    let result = super.tryCall(
      "oAppVersion",
      "oAppVersion():(uint64,uint64)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new USDO__oAppVersionResult(value[0].toBigInt(), value[1].toBigInt()),
    );
  }

  oftVersion(): USDO__oftVersionResult {
    let result = super.call("oftVersion", "oftVersion():(bytes4,uint64)", []);

    return new USDO__oftVersionResult(
      result[0].toBytes(),
      result[1].toBigInt(),
    );
  }

  try_oftVersion(): ethereum.CallResult<USDO__oftVersionResult> {
    let result = super.tryCall(
      "oftVersion",
      "oftVersion():(bytes4,uint64)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new USDO__oftVersionResult(value[0].toBytes(), value[1].toBigInt()),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pearlmit(): Address {
    let result = super.call("pearlmit", "pearlmit():(address)", []);

    return result[0].toAddress();
  }

  try_pearlmit(): ethereum.CallResult<Address> {
    let result = super.tryCall("pearlmit", "pearlmit():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  peers(eid: BigInt): Bytes {
    let result = super.call("peers", "peers(uint32):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(eid),
    ]);

    return result[0].toBytes();
  }

  try_peers(eid: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("peers", "peers(uint32):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(eid),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  preCrime(): Address {
    let result = super.call("preCrime", "preCrime():(address)", []);

    return result[0].toAddress();
  }

  try_preCrime(): ethereum.CallResult<Address> {
    let result = super.tryCall("preCrime", "preCrime():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  quoteOFT(
    _sendParam: USDO__quoteOFTInput_sendParamStruct,
  ): USDO__quoteOFTResult {
    let result = super.call(
      "quoteOFT",
      "quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes)):((uint256,uint256),(int256,string)[],(uint256,uint256))",
      [ethereum.Value.fromTuple(_sendParam)],
    );

    return changetype<USDO__quoteOFTResult>(
      new USDO__quoteOFTResult(
        changetype<USDO__quoteOFTResultOftLimitStruct>(result[0].toTuple()),
        result[1].toTupleArray<USDO__quoteOFTResultOftFeeDetailsStruct>(),
        changetype<USDO__quoteOFTResultOftReceiptStruct>(result[2].toTuple()),
      ),
    );
  }

  try_quoteOFT(
    _sendParam: USDO__quoteOFTInput_sendParamStruct,
  ): ethereum.CallResult<USDO__quoteOFTResult> {
    let result = super.tryCall(
      "quoteOFT",
      "quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes)):((uint256,uint256),(int256,string)[],(uint256,uint256))",
      [ethereum.Value.fromTuple(_sendParam)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<USDO__quoteOFTResult>(
        new USDO__quoteOFTResult(
          changetype<USDO__quoteOFTResultOftLimitStruct>(value[0].toTuple()),
          value[1].toTupleArray<USDO__quoteOFTResultOftFeeDetailsStruct>(),
          changetype<USDO__quoteOFTResultOftReceiptStruct>(value[2].toTuple()),
        ),
      ),
    );
  }

  quoteSend(
    _sendParam: USDO__quoteSendInput_sendParamStruct,
    _payInLzToken: boolean,
  ): USDO__quoteSendResultMsgFeeStruct {
    let result = super.call(
      "quoteSend",
      "quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool):((uint256,uint256))",
      [
        ethereum.Value.fromTuple(_sendParam),
        ethereum.Value.fromBoolean(_payInLzToken),
      ],
    );

    return changetype<USDO__quoteSendResultMsgFeeStruct>(result[0].toTuple());
  }

  try_quoteSend(
    _sendParam: USDO__quoteSendInput_sendParamStruct,
    _payInLzToken: boolean,
  ): ethereum.CallResult<USDO__quoteSendResultMsgFeeStruct> {
    let result = super.tryCall(
      "quoteSend",
      "quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool):((uint256,uint256))",
      [
        ethereum.Value.fromTuple(_sendParam),
        ethereum.Value.fromBoolean(_payInLzToken),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<USDO__quoteSendResultMsgFeeStruct>(value[0].toTuple()),
    );
  }

  quoteSendPacket(
    _sendParam: USDO__quoteSendPacketInput_sendParamStruct,
    _extraOptions: Bytes,
    _payInLzToken: boolean,
    _composeMsg: Bytes,
    param4: Bytes,
  ): USDO__quoteSendPacketResultMsgFeeStruct {
    let result = super.call(
      "quoteSendPacket",
      "quoteSendPacket((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bytes,bool,bytes,bytes):((uint256,uint256))",
      [
        ethereum.Value.fromTuple(_sendParam),
        ethereum.Value.fromBytes(_extraOptions),
        ethereum.Value.fromBoolean(_payInLzToken),
        ethereum.Value.fromBytes(_composeMsg),
        ethereum.Value.fromBytes(param4),
      ],
    );

    return changetype<USDO__quoteSendPacketResultMsgFeeStruct>(
      result[0].toTuple(),
    );
  }

  try_quoteSendPacket(
    _sendParam: USDO__quoteSendPacketInput_sendParamStruct,
    _extraOptions: Bytes,
    _payInLzToken: boolean,
    _composeMsg: Bytes,
    param4: Bytes,
  ): ethereum.CallResult<USDO__quoteSendPacketResultMsgFeeStruct> {
    let result = super.tryCall(
      "quoteSendPacket",
      "quoteSendPacket((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bytes,bool,bytes,bytes):((uint256,uint256))",
      [
        ethereum.Value.fromTuple(_sendParam),
        ethereum.Value.fromBytes(_extraOptions),
        ethereum.Value.fromBoolean(_payInLzToken),
        ethereum.Value.fromBytes(_composeMsg),
        ethereum.Value.fromBytes(param4),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<USDO__quoteSendPacketResultMsgFeeStruct>(value[0].toTuple()),
    );
  }

  removeDust(_amountLD: BigInt): BigInt {
    let result = super.call("removeDust", "removeDust(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amountLD),
    ]);

    return result[0].toBigInt();
  }

  try_removeDust(_amountLD: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("removeDust", "removeDust(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amountLD),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sharedDecimals(): i32 {
    let result = super.call("sharedDecimals", "sharedDecimals():(uint8)", []);

    return result[0].toI32();
  }

  try_sharedDecimals(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "sharedDecimals",
      "sharedDecimals():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tapiocaOmnichainReceiveExtender(): Address {
    let result = super.call(
      "tapiocaOmnichainReceiveExtender",
      "tapiocaOmnichainReceiveExtender():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_tapiocaOmnichainReceiveExtender(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tapiocaOmnichainReceiveExtender",
      "tapiocaOmnichainReceiveExtender():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  toeExtExec(): Address {
    let result = super.call("toeExtExec", "toeExtExec():(address)", []);

    return result[0].toAddress();
  }

  try_toeExtExec(): ethereum.CallResult<Address> {
    let result = super.tryCall("toeExtExec", "toeExtExec():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(to: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);

    return result[0].toBoolean();
  }

  try_transfer(to: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(from: Address, to: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount),
      ],
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    from: Address,
    to: Address,
    amount: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  yieldBox(): Address {
    let result = super.call("yieldBox", "yieldBox():(address)", []);

    return result[0].toAddress();
  }

  try_yieldBox(): ethereum.CallResult<Address> {
    let result = super.tryCall("yieldBox", "yieldBox():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _initData(): ConstructorCall_initDataStruct {
    return changetype<ConstructorCall_initDataStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _modulesData(): ConstructorCall_modulesDataStruct {
    return changetype<ConstructorCall_modulesDataStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_initDataStruct extends ethereum.Tuple {
  get endpoint(): Address {
    return this[0].toAddress();
  }

  get delegate(): Address {
    return this[1].toAddress();
  }

  get yieldBox(): Address {
    return this[2].toAddress();
  }

  get cluster(): Address {
    return this[3].toAddress();
  }

  get extExec(): Address {
    return this[4].toAddress();
  }

  get pearlmit(): Address {
    return this[5].toAddress();
  }
}

export class ConstructorCall_modulesDataStruct extends ethereum.Tuple {
  get usdoSenderModule(): Address {
    return this[0].toAddress();
  }

  get usdoReceiverModule(): Address {
    return this[1].toAddress();
  }

  get marketReceiverModule(): Address {
    return this[2].toAddress();
  }

  get optionReceiverModule(): Address {
    return this[3].toAddress();
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AddFlashloanFeeCall extends ethereum.Call {
  get inputs(): AddFlashloanFeeCall__Inputs {
    return new AddFlashloanFeeCall__Inputs(this);
  }

  get outputs(): AddFlashloanFeeCall__Outputs {
    return new AddFlashloanFeeCall__Outputs(this);
  }
}

export class AddFlashloanFeeCall__Inputs {
  _call: AddFlashloanFeeCall;

  constructor(call: AddFlashloanFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddFlashloanFeeCall__Outputs {
  _call: AddFlashloanFeeCall;

  constructor(call: AddFlashloanFeeCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExtractFeesCall extends ethereum.Call {
  get inputs(): ExtractFeesCall__Inputs {
    return new ExtractFeesCall__Inputs(this);
  }

  get outputs(): ExtractFeesCall__Outputs {
    return new ExtractFeesCall__Outputs(this);
  }
}

export class ExtractFeesCall__Inputs {
  _call: ExtractFeesCall;

  constructor(call: ExtractFeesCall) {
    this._call = call;
  }
}

export class ExtractFeesCall__Outputs {
  _call: ExtractFeesCall;

  constructor(call: ExtractFeesCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LzReceiveCall extends ethereum.Call {
  get inputs(): LzReceiveCall__Inputs {
    return new LzReceiveCall__Inputs(this);
  }

  get outputs(): LzReceiveCall__Outputs {
    return new LzReceiveCall__Outputs(this);
  }
}

export class LzReceiveCall__Inputs {
  _call: LzReceiveCall;

  constructor(call: LzReceiveCall) {
    this._call = call;
  }

  get _origin(): LzReceiveCall_originStruct {
    return changetype<LzReceiveCall_originStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _guid(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _message(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _executor(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _extraData(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class LzReceiveCall__Outputs {
  _call: LzReceiveCall;

  constructor(call: LzReceiveCall) {
    this._call = call;
  }
}

export class LzReceiveCall_originStruct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class LzReceiveAndRevertCall extends ethereum.Call {
  get inputs(): LzReceiveAndRevertCall__Inputs {
    return new LzReceiveAndRevertCall__Inputs(this);
  }

  get outputs(): LzReceiveAndRevertCall__Outputs {
    return new LzReceiveAndRevertCall__Outputs(this);
  }
}

export class LzReceiveAndRevertCall__Inputs {
  _call: LzReceiveAndRevertCall;

  constructor(call: LzReceiveAndRevertCall) {
    this._call = call;
  }

  get _packets(): Array<LzReceiveAndRevertCall_packetsStruct> {
    return this._call.inputValues[0].value.toTupleArray<LzReceiveAndRevertCall_packetsStruct>();
  }
}

export class LzReceiveAndRevertCall__Outputs {
  _call: LzReceiveAndRevertCall;

  constructor(call: LzReceiveAndRevertCall) {
    this._call = call;
  }
}

export class LzReceiveAndRevertCall_packetsStruct extends ethereum.Tuple {
  get origin(): LzReceiveAndRevertCall_packetsOriginStruct {
    return changetype<LzReceiveAndRevertCall_packetsOriginStruct>(
      this[0].toTuple(),
    );
  }

  get dstEid(): BigInt {
    return this[1].toBigInt();
  }

  get receiver(): Address {
    return this[2].toAddress();
  }

  get guid(): Bytes {
    return this[3].toBytes();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get executor(): Address {
    return this[5].toAddress();
  }

  get message(): Bytes {
    return this[6].toBytes();
  }

  get extraData(): Bytes {
    return this[7].toBytes();
  }
}

export class LzReceiveAndRevertCall_packetsOriginStruct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class LzReceiveSimulateCall extends ethereum.Call {
  get inputs(): LzReceiveSimulateCall__Inputs {
    return new LzReceiveSimulateCall__Inputs(this);
  }

  get outputs(): LzReceiveSimulateCall__Outputs {
    return new LzReceiveSimulateCall__Outputs(this);
  }
}

export class LzReceiveSimulateCall__Inputs {
  _call: LzReceiveSimulateCall;

  constructor(call: LzReceiveSimulateCall) {
    this._call = call;
  }

  get _origin(): LzReceiveSimulateCall_originStruct {
    return changetype<LzReceiveSimulateCall_originStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _guid(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _message(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _executor(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _extraData(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class LzReceiveSimulateCall__Outputs {
  _call: LzReceiveSimulateCall;

  constructor(call: LzReceiveSimulateCall) {
    this._call = call;
  }
}

export class LzReceiveSimulateCall_originStruct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class PermitCall extends ethereum.Call {
  get inputs(): PermitCall__Inputs {
    return new PermitCall__Inputs(this);
  }

  get outputs(): PermitCall__Outputs {
    return new PermitCall__Outputs(this);
  }
}

export class PermitCall__Inputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class PermitCall__Outputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SendCall extends ethereum.Call {
  get inputs(): SendCall__Inputs {
    return new SendCall__Inputs(this);
  }

  get outputs(): SendCall__Outputs {
    return new SendCall__Outputs(this);
  }
}

export class SendCall__Inputs {
  _call: SendCall;

  constructor(call: SendCall) {
    this._call = call;
  }

  get _sendParam(): SendCall_sendParamStruct {
    return changetype<SendCall_sendParamStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _fee(): SendCall_feeStruct {
    return changetype<SendCall_feeStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get _refundAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SendCall__Outputs {
  _call: SendCall;

  constructor(call: SendCall) {
    this._call = call;
  }

  get msgReceipt(): SendCallMsgReceiptStruct {
    return changetype<SendCallMsgReceiptStruct>(
      this._call.outputValues[0].value.toTuple(),
    );
  }

  get oftReceipt(): SendCallOftReceiptStruct {
    return changetype<SendCallOftReceiptStruct>(
      this._call.outputValues[1].value.toTuple(),
    );
  }
}

export class SendCall_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class SendCall_feeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendCallMsgReceiptStruct extends ethereum.Tuple {
  get guid(): Bytes {
    return this[0].toBytes();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get fee(): SendCallMsgReceiptFeeStruct {
    return changetype<SendCallMsgReceiptFeeStruct>(this[2].toTuple());
  }
}

export class SendCallMsgReceiptFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendCallOftReceiptStruct extends ethereum.Tuple {
  get amountSentLD(): BigInt {
    return this[0].toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendPacketCall extends ethereum.Call {
  get inputs(): SendPacketCall__Inputs {
    return new SendPacketCall__Inputs(this);
  }

  get outputs(): SendPacketCall__Outputs {
    return new SendPacketCall__Outputs(this);
  }
}

export class SendPacketCall__Inputs {
  _call: SendPacketCall;

  constructor(call: SendPacketCall) {
    this._call = call;
  }

  get _lzSendParam(): SendPacketCall_lzSendParamStruct {
    return changetype<SendPacketCall_lzSendParamStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _composeMsg(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SendPacketCall__Outputs {
  _call: SendPacketCall;

  constructor(call: SendPacketCall) {
    this._call = call;
  }

  get msgReceipt(): SendPacketCallMsgReceiptStruct {
    return changetype<SendPacketCallMsgReceiptStruct>(
      this._call.outputValues[0].value.toTuple(),
    );
  }

  get oftReceipt(): SendPacketCallOftReceiptStruct {
    return changetype<SendPacketCallOftReceiptStruct>(
      this._call.outputValues[1].value.toTuple(),
    );
  }

  get message(): Bytes {
    return this._call.outputValues[2].value.toBytes();
  }

  get options(): Bytes {
    return this._call.outputValues[3].value.toBytes();
  }
}

export class SendPacketCall_lzSendParamStruct extends ethereum.Tuple {
  get sendParam(): SendPacketCall_lzSendParamSendParamStruct {
    return changetype<SendPacketCall_lzSendParamSendParamStruct>(
      this[0].toTuple(),
    );
  }

  get fee(): SendPacketCall_lzSendParamFeeStruct {
    return changetype<SendPacketCall_lzSendParamFeeStruct>(this[1].toTuple());
  }

  get extraOptions(): Bytes {
    return this[2].toBytes();
  }

  get refundAddress(): Address {
    return this[3].toAddress();
  }
}

export class SendPacketCall_lzSendParamSendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class SendPacketCall_lzSendParamFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendPacketCallMsgReceiptStruct extends ethereum.Tuple {
  get guid(): Bytes {
    return this[0].toBytes();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get fee(): SendPacketCallMsgReceiptFeeStruct {
    return changetype<SendPacketCallMsgReceiptFeeStruct>(this[2].toTuple());
  }
}

export class SendPacketCallMsgReceiptFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendPacketCallOftReceiptStruct extends ethereum.Tuple {
  get amountSentLD(): BigInt {
    return this[0].toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendPacketFromCall extends ethereum.Call {
  get inputs(): SendPacketFromCall__Inputs {
    return new SendPacketFromCall__Inputs(this);
  }

  get outputs(): SendPacketFromCall__Outputs {
    return new SendPacketFromCall__Outputs(this);
  }
}

export class SendPacketFromCall__Inputs {
  _call: SendPacketFromCall;

  constructor(call: SendPacketFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lzSendParam(): SendPacketFromCall_lzSendParamStruct {
    return changetype<SendPacketFromCall_lzSendParamStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get _composeMsg(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SendPacketFromCall__Outputs {
  _call: SendPacketFromCall;

  constructor(call: SendPacketFromCall) {
    this._call = call;
  }

  get msgReceipt(): SendPacketFromCallMsgReceiptStruct {
    return changetype<SendPacketFromCallMsgReceiptStruct>(
      this._call.outputValues[0].value.toTuple(),
    );
  }

  get oftReceipt(): SendPacketFromCallOftReceiptStruct {
    return changetype<SendPacketFromCallOftReceiptStruct>(
      this._call.outputValues[1].value.toTuple(),
    );
  }

  get message(): Bytes {
    return this._call.outputValues[2].value.toBytes();
  }

  get options(): Bytes {
    return this._call.outputValues[3].value.toBytes();
  }
}

export class SendPacketFromCall_lzSendParamStruct extends ethereum.Tuple {
  get sendParam(): SendPacketFromCall_lzSendParamSendParamStruct {
    return changetype<SendPacketFromCall_lzSendParamSendParamStruct>(
      this[0].toTuple(),
    );
  }

  get fee(): SendPacketFromCall_lzSendParamFeeStruct {
    return changetype<SendPacketFromCall_lzSendParamFeeStruct>(
      this[1].toTuple(),
    );
  }

  get extraOptions(): Bytes {
    return this[2].toBytes();
  }

  get refundAddress(): Address {
    return this[3].toAddress();
  }
}

export class SendPacketFromCall_lzSendParamSendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class SendPacketFromCall_lzSendParamFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendPacketFromCallMsgReceiptStruct extends ethereum.Tuple {
  get guid(): Bytes {
    return this[0].toBytes();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get fee(): SendPacketFromCallMsgReceiptFeeStruct {
    return changetype<SendPacketFromCallMsgReceiptFeeStruct>(this[2].toTuple());
  }
}

export class SendPacketFromCallMsgReceiptFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendPacketFromCallOftReceiptStruct extends ethereum.Tuple {
  get amountSentLD(): BigInt {
    return this[0].toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class SetBurnerStatusCall extends ethereum.Call {
  get inputs(): SetBurnerStatusCall__Inputs {
    return new SetBurnerStatusCall__Inputs(this);
  }

  get outputs(): SetBurnerStatusCall__Outputs {
    return new SetBurnerStatusCall__Outputs(this);
  }
}

export class SetBurnerStatusCall__Inputs {
  _call: SetBurnerStatusCall;

  constructor(call: SetBurnerStatusCall) {
    this._call = call;
  }

  get _for(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetBurnerStatusCall__Outputs {
  _call: SetBurnerStatusCall;

  constructor(call: SetBurnerStatusCall) {
    this._call = call;
  }
}

export class SetClusterCall extends ethereum.Call {
  get inputs(): SetClusterCall__Inputs {
    return new SetClusterCall__Inputs(this);
  }

  get outputs(): SetClusterCall__Outputs {
    return new SetClusterCall__Outputs(this);
  }
}

export class SetClusterCall__Inputs {
  _call: SetClusterCall;

  constructor(call: SetClusterCall) {
    this._call = call;
  }

  get _cluster(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetClusterCall__Outputs {
  _call: SetClusterCall;

  constructor(call: SetClusterCall) {
    this._call = call;
  }
}

export class SetDelegateCall extends ethereum.Call {
  get inputs(): SetDelegateCall__Inputs {
    return new SetDelegateCall__Inputs(this);
  }

  get outputs(): SetDelegateCall__Outputs {
    return new SetDelegateCall__Outputs(this);
  }
}

export class SetDelegateCall__Inputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }

  get _delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDelegateCall__Outputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }
}

export class SetEnforcedOptionsCall extends ethereum.Call {
  get inputs(): SetEnforcedOptionsCall__Inputs {
    return new SetEnforcedOptionsCall__Inputs(this);
  }

  get outputs(): SetEnforcedOptionsCall__Outputs {
    return new SetEnforcedOptionsCall__Outputs(this);
  }
}

export class SetEnforcedOptionsCall__Inputs {
  _call: SetEnforcedOptionsCall;

  constructor(call: SetEnforcedOptionsCall) {
    this._call = call;
  }

  get _enforcedOptions(): Array<SetEnforcedOptionsCall_enforcedOptionsStruct> {
    return this._call.inputValues[0].value.toTupleArray<SetEnforcedOptionsCall_enforcedOptionsStruct>();
  }
}

export class SetEnforcedOptionsCall__Outputs {
  _call: SetEnforcedOptionsCall;

  constructor(call: SetEnforcedOptionsCall) {
    this._call = call;
  }
}

export class SetEnforcedOptionsCall_enforcedOptionsStruct extends ethereum.Tuple {
  get eid(): BigInt {
    return this[0].toBigInt();
  }

  get msgType(): i32 {
    return this[1].toI32();
  }

  get options(): Bytes {
    return this[2].toBytes();
  }
}

export class SetFlashloanHelperCall extends ethereum.Call {
  get inputs(): SetFlashloanHelperCall__Inputs {
    return new SetFlashloanHelperCall__Inputs(this);
  }

  get outputs(): SetFlashloanHelperCall__Outputs {
    return new SetFlashloanHelperCall__Outputs(this);
  }
}

export class SetFlashloanHelperCall__Inputs {
  _call: SetFlashloanHelperCall;

  constructor(call: SetFlashloanHelperCall) {
    this._call = call;
  }

  get _helper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFlashloanHelperCall__Outputs {
  _call: SetFlashloanHelperCall;

  constructor(call: SetFlashloanHelperCall) {
    this._call = call;
  }
}

export class SetMinterStatusCall extends ethereum.Call {
  get inputs(): SetMinterStatusCall__Inputs {
    return new SetMinterStatusCall__Inputs(this);
  }

  get outputs(): SetMinterStatusCall__Outputs {
    return new SetMinterStatusCall__Outputs(this);
  }
}

export class SetMinterStatusCall__Inputs {
  _call: SetMinterStatusCall;

  constructor(call: SetMinterStatusCall) {
    this._call = call;
  }

  get _for(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetMinterStatusCall__Outputs {
  _call: SetMinterStatusCall;

  constructor(call: SetMinterStatusCall) {
    this._call = call;
  }
}

export class SetMsgInspectorCall extends ethereum.Call {
  get inputs(): SetMsgInspectorCall__Inputs {
    return new SetMsgInspectorCall__Inputs(this);
  }

  get outputs(): SetMsgInspectorCall__Outputs {
    return new SetMsgInspectorCall__Outputs(this);
  }
}

export class SetMsgInspectorCall__Inputs {
  _call: SetMsgInspectorCall;

  constructor(call: SetMsgInspectorCall) {
    this._call = call;
  }

  get _msgInspector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMsgInspectorCall__Outputs {
  _call: SetMsgInspectorCall;

  constructor(call: SetMsgInspectorCall) {
    this._call = call;
  }
}

export class SetPauseCall extends ethereum.Call {
  get inputs(): SetPauseCall__Inputs {
    return new SetPauseCall__Inputs(this);
  }

  get outputs(): SetPauseCall__Outputs {
    return new SetPauseCall__Outputs(this);
  }
}

export class SetPauseCall__Inputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }

  get _pauseState(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPauseCall__Outputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }
}

export class SetPearlmitCall extends ethereum.Call {
  get inputs(): SetPearlmitCall__Inputs {
    return new SetPearlmitCall__Inputs(this);
  }

  get outputs(): SetPearlmitCall__Outputs {
    return new SetPearlmitCall__Outputs(this);
  }
}

export class SetPearlmitCall__Inputs {
  _call: SetPearlmitCall;

  constructor(call: SetPearlmitCall) {
    this._call = call;
  }

  get _pearlmit(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPearlmitCall__Outputs {
  _call: SetPearlmitCall;

  constructor(call: SetPearlmitCall) {
    this._call = call;
  }
}

export class SetPeerCall extends ethereum.Call {
  get inputs(): SetPeerCall__Inputs {
    return new SetPeerCall__Inputs(this);
  }

  get outputs(): SetPeerCall__Outputs {
    return new SetPeerCall__Outputs(this);
  }
}

export class SetPeerCall__Inputs {
  _call: SetPeerCall;

  constructor(call: SetPeerCall) {
    this._call = call;
  }

  get _eid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _peer(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetPeerCall__Outputs {
  _call: SetPeerCall;

  constructor(call: SetPeerCall) {
    this._call = call;
  }
}

export class SetPreCrimeCall extends ethereum.Call {
  get inputs(): SetPreCrimeCall__Inputs {
    return new SetPreCrimeCall__Inputs(this);
  }

  get outputs(): SetPreCrimeCall__Outputs {
    return new SetPreCrimeCall__Outputs(this);
  }
}

export class SetPreCrimeCall__Inputs {
  _call: SetPreCrimeCall;

  constructor(call: SetPreCrimeCall) {
    this._call = call;
  }

  get _preCrime(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPreCrimeCall__Outputs {
  _call: SetPreCrimeCall;

  constructor(call: SetPreCrimeCall) {
    this._call = call;
  }
}

export class SetTapiocaOmnichainReceiveExtenderCall extends ethereum.Call {
  get inputs(): SetTapiocaOmnichainReceiveExtenderCall__Inputs {
    return new SetTapiocaOmnichainReceiveExtenderCall__Inputs(this);
  }

  get outputs(): SetTapiocaOmnichainReceiveExtenderCall__Outputs {
    return new SetTapiocaOmnichainReceiveExtenderCall__Outputs(this);
  }
}

export class SetTapiocaOmnichainReceiveExtenderCall__Inputs {
  _call: SetTapiocaOmnichainReceiveExtenderCall;

  constructor(call: SetTapiocaOmnichainReceiveExtenderCall) {
    this._call = call;
  }

  get _tapiocaOmnichainReceiveExtender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTapiocaOmnichainReceiveExtenderCall__Outputs {
  _call: SetTapiocaOmnichainReceiveExtenderCall;

  constructor(call: SetTapiocaOmnichainReceiveExtenderCall) {
    this._call = call;
  }
}

export class SetToeExtExecCall extends ethereum.Call {
  get inputs(): SetToeExtExecCall__Inputs {
    return new SetToeExtExecCall__Inputs(this);
  }

  get outputs(): SetToeExtExecCall__Outputs {
    return new SetToeExtExecCall__Outputs(this);
  }
}

export class SetToeExtExecCall__Inputs {
  _call: SetToeExtExecCall;

  constructor(call: SetToeExtExecCall) {
    this._call = call;
  }

  get _extExec(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetToeExtExecCall__Outputs {
  _call: SetToeExtExecCall;

  constructor(call: SetToeExtExecCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
