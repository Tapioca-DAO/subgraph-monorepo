enum MarketType {
  BIG_BANG
  SINGULARITY
}

type Market @entity(immutable: true) {
  id: Bytes!
  chainId: Int! # uint32
  address: String! # address
  borrowToken: Token!
  collateralToken: Token!
  oracleAddress: String! # address
  marketType: MarketType! # uint8
}

type Token @entity(immutable: true) {
  id: Bytes!
  chainId: Int! # uint32
  address: String!
  name: String!
  symbol: String!
  decimals: Int! # uint32
}

type RemoteTOFTMeta @entity(immutable: false) {
  id: Bytes!
  lzChainId: Int! # uint16
  chainId: Int! # uint16
  address: String! # bytes
}

type TOFToken @entity(immutable: false) {
  id: Bytes!
  token: Token!
  underlyingToken: Token 
  remoteTOFTs: [RemoteTOFTMeta!]!
  markets: [Market!]
}

#START ######### TOB BASE ##########
type TapiocaOptionBrokerPaymentToken @entity(immutable: false) {
  id: Bytes!
  token: Token!
  oracleAddress: String! # address
  oracleData: Bytes!
}

type TapiocaOptionBrokerEpoch @entity(immutable: true) {
  id: String!
  epochId: BigInt! # uint256
  epochTAPAmount: BigInt! # uint256
  epochTAPValuation: BigInt! # uint256
}

type TapiocaOptionBroker @entity(immutable: false) {
  id: Bytes!
  paymentTokens: [TapiocaOptionBrokerPaymentToken!]!
  epochDuration: Int! # uint32
  tap: Token!
  currentEpoch: TapiocaOptionBrokerEpoch!
}
#END ########### TOB BASE ##########

#START ######### TOLP BASE ##########
type TolpSingularityPool @entity(immutable: false) {
  id: String!
  sglAssetId: BigInt! # uint256
  sglAddress: String! # address
  totalDeposited: BigInt! # total amount of YieldBox shares deposited, used for pool share calculation
  poolWeight: BigInt! # uint256
  isInRescueMode: Boolean! # bool
  currentEpochTapAmount: BigInt! # uint256
}

type TapiocaOptionLiquidityProvision @entity(immutable: false) {
  id: Bytes!
  singularityPools: [TolpSingularityPool!]!
  totalSingularityPoolWeights: BigInt! # uint256 - Total weight of all active singularity pools
}
#END ########### TOLP BASE ##########

#START ######### TOLP NFT BASE ##########
type TOLPLockPosition @entity(immutable: false) {
  id: Bytes!
  sglAddress: String! # address
  sglAssetId: BigInt! # uint128
  ybShares: BigInt! # uint128
  lockTime: Int! # uint128
  lockDuration: Int! # uint128
  lockedAtEpoch: TapiocaOptionBrokerEpoch!
  tolp: TOLP!
  tolpSingularityPool: TolpSingularityPool!
}

type TOLP @entity(immutable: false) {
  id: Bytes!
  nftId: BigInt! # uint256
  owner: String! # address - mutable

  lockPosition: TOLPLockPosition
}
#END ########### TOLP NFT BASE ##########

#START ######### OTAP NFT BASE ##########
type OTAPParticipatePosition @entity(immutable: false) {
  id: Bytes!
  participatedAtEpoch: TapiocaOptionBrokerEpoch!
  discount: Int! # uint256
  lastExercisedEpoch: TapiocaOptionBrokerEpoch
  exercisedTap: BigInt
  tolp: TOLP!
  otap: OTAP!
}

type OTAP @entity(immutable: false) {
  id: Bytes!
  nftId: BigInt! # uint256
  owner: String! # address

  participatePosition: OTAPParticipatePosition
}
#END ########### OTAP NFT BASE ##########

#START ######### TWTAP BASE ##########
type TwTapRewardToken @entity(immutable: true) {
  id: ID! # rewardTokenId
  tokenId: Int!
  token: Token!
}

type TwTapEpochRewardAmount @entity(immutable: false) {
  id: ID! # epochId-rewardTokenId
  token: TwTapRewardToken!
  amount: BigInt! # uint256
  epoch: TwTapEpoch!
}

type TwTapEpoch @entity(immutable: false) {
  id: ID! # epochId
  epochId: Int! # uint256
  lastDistributedRewardsTimestamp: Int! # timestamp
  distributedRewardAmounts: [TwTapEpochRewardAmount!]! @derivedFrom(field: "epoch")
}

type TimeWeightedTapioca @entity(immutable: false) {
  id: ID! # twtap address
  currentEpoch: TwTapEpoch!
  epochDuration: Int! # timestamp
  maxLockDuration: Int8! # timestamp
  epochesStartTime: Int! # timestamp
  virtualTotalAmount: BigInt! # uint256
  minWeightFactor: BigInt! # uint256
  isPaused: Boolean! # bool
  rewardTokens: [TwTapRewardToken!]!
}
#END ########### TWTAP BASE ##########

#START ######### TWTAP NFT BASE ##########
type TWTAPLockPosition @entity(immutable: false) {
  id: ID! # nftId
  tapAmount: BigInt! # uint256
  multiplier: BigInt! # uint256
  votingPowerAmount: BigInt! # uint256
  lockTime: Int! # uint128
  lockDuration: Int8! # uint128
  lockedAtEpoch: TwTapEpoch! # uint256
  lastActiveEpoch: TwTapEpoch! # uint256
  isExited: Boolean! # bool
  lastClaimedTimestamp: Int! # uint128
  twTap: TWTAP!
}

type TWTAP @entity(immutable: false) {
  id: ID! # nftId
  nftId: BigInt! # uint256
  owner: String! # address - mutable

  lockPosition: TWTAPLockPosition
}
#END ########### TWTAP NFT BASE ##########