specVersion: 1.0.0
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Penrose
    source:
      abi: Penrose
      startBlock: 46750279
      address: "0x0000000000000000000000000000000000000000"
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - FeeToUpdate
      abis:
        - name: Penrose
          file: ./abis/Penrose.json
      blockHandlers:
        - handler: mapToftAndMarketAddresses
          filter:
            kind: once
      file: ./src/markets.ts
    network: arbitrum-sepolia
    context:
      &a1
      penrose_address:
        type: String
        data: "0x0000000000000000000000000000000000000000"
      tob_address:
        type: String
        data: "0x309c583ded3d78140f59b9910e5c8f57ea3185ac"
      otap_address:
        type: String
        data: "0xaef8f8b69d95a4d8fa050d38494512cb30902246"
      tolp_address:
        type: String
        data: "0x9b47f96f13c557a4015c1aa670522a3586ae0dc5"
      twtap_address:
        type: String
        data: "0x9abb92bd60a79326189ad1a964849b5e77e2b55e"
  - kind: ethereum
    name: TOLP
    source:
      abi: TOLP
      startBlock: 46750279
      address: "0x9b47f96F13c557A4015c1aa670522A3586Ae0dc5"
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - TOLP
        - TOLPLockPosition
      abis:
        - name: TOLP
          file: ./abis/tOLP.json
      eventHandlers:
        - event: Mint(indexed address,indexed uint256,address,uint256,uint128,uint128)
          handler: handleMint
        - event: Burn(indexed address,indexed uint256,address,uint256)
          handler: handleBurn
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: RegisterSingularity(indexed uint256,address,uint256)
          handler: handleRegisterSingularity
        - event: UnregisterSingularity(indexed uint256,address)
          handler: handleUnregisterSingularity
        - event: SetSGLPoolWeight(indexed uint256,address,uint256)
          handler: handleSetSGLPoolWeight
        - event: UpdateTotalSingularityPoolWeights(uint256)
          handler: handleUpdateTotalSingularityPoolWeights
        - event: ActivateSGLPoolRescue(indexed uint256,address)
          handler: handleActivateSGLPoolRescue
      file: ./src/tolp.ts
    network: arbitrum-sepolia
    context: *a1
  - kind: ethereum
    name: TOB
    source:
      abi: TOB
      startBlock: 46750279
      address: "0x309C583dEd3D78140f59b9910e5c8f57eA3185AC"
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - TapiocaOptionBroker
      abis:
        - name: TOB
          file: ./abis/tOB.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: SetPaymentToken(indexed address,address,bytes)
          handler: handleSetPaymentToken
        - event: NewEpoch(indexed uint256,uint256,uint256)
          handler: handleNewEpoch
        - event: Participate(indexed uint256,indexed
            uint256,uint256,uint256,uint256,uint256)
          handler: handleParticipate
        - event: ExitPosition(indexed uint256,indexed uint256,uint256)
          handler: handleExitPosition
        - event: ExerciseOption(indexed uint256,indexed address,indexed
            address,uint256,uint256)
          handler: handleExerciseOption
      file: ./src/tob.ts
    network: arbitrum-sepolia
    context: *a1
  - kind: ethereum
    name: TWTAP
    source:
      abi: TWTAP
      startBlock: 46750279
      address: "0x9ABB92BD60a79326189aD1A964849b5e77E2b55e"
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - TWTAPLockPosition
        - TWTAP
        - TimeWeightedTapioca
      abis:
        - name: TWTAP
          file: ./abis/twTAP.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: Participate(indexed address,uint256,uint256,uint256,uint256)
          handler: handleParticipate
        - event: ExitPosition(indexed uint256,indexed address,uint256)
          handler: handleExitPosition
        - event: AdvanceEpoch(indexed uint256,uint256)
          handler: handleAdvanceEpoch
        - event: AddRewardToken(indexed address,uint256)
          handler: handleAddRewardToken
        - event: SetMinWeightFactor(uint256,uint256)
          handler: handleSetMinWeightFactor
        - event: SetVirtualTotalAmount(uint256,uint256)
          handler: handleSetVirtualTotalAmount
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
        - event: ClaimReward(indexed address,indexed address,indexed
            uint256,uint256,uint256)
          handler: handleClaimReward
        - event: DistributeReward(indexed address,indexed address,uint256,uint256)
          handler: handleDistributeReward
      file: ./src/twtap.ts
    network: arbitrum-sepolia
    context: *a1
  - kind: ethereum
    name: OTAP
    source:
      abi: OTAP
      startBlock: 46750279
      address: "0xAeF8f8B69d95a4D8Fa050D38494512CB30902246"
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - TapiocaOptionBroker
      abis:
        - name: OTAP
          file: ./abis/OTAP.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/otap.ts
    network: arbitrum-sepolia
    context: *a1
templates:
  - kind: ethereum
    name: TOFT
    network: arbitrum-sepolia
    source:
      abi: TOFT
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - TOFToken
      abis:
        - name: TOFT
          file: ./abis/TOFT.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: PeerSet(uint32,bytes32)
          handler: handlePeerSet
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
      file: ./src/toft.ts
  - kind: ethereum
    name: Markets
    network: arbitrum-sepolia
    source:
      abi: Singularity
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - Market
      abis:
        - name: Singularity
          file: ./abis/Singularity.json
        - name: TOFT
          file: ./abis/TOFT.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
      file: ./src/markets.ts
